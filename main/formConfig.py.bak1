#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.2
#  in conjunction with Tcl version 8.6
#    Feb 28, 2020 08:37:53 AM CST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import formConfig_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = formConfig (root)
    formConfig_support.init(root, top)
    root.mainloop()

w = None
def create_formConfig(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_formConfig(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = formConfig (w)
    formConfig_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_formConfig():
    global w
    w.destroy()
    w = None

class formConfig:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("758x544+486+266")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1, 1)
        top.title("Configuration Utility")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(x=2, y=46, height=495, width=755)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(self.Frame1)
        self.TNotebook1.place(x=5, y=5, height=487, width=747)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(0, text="General Configuration", compound="left"
                ,underline="-1", )
        self.TNotebook1_t2 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2, padding=3)
        self.TNotebook1.tab(1, text="Themes",compound="left",underline="-1",)

        self.Label1 = tk.Label(self.TNotebook1_t1)
        self.Label1.place(x=20, y=110,  height=19, width=186)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='e')
        self.Label1.configure(text='''Future:''')

        self.Message1 = tk.Message(self.TNotebook1_t1)
        self.Message1.place(x=10, y=44, height=43, width=235)
        self.Message1.configure(font="-family {Ubuntu} -size 10 -weight bold")
        self.Message1.configure(padx="3")
        self.Message1.configure(pady="3")
        self.Message1.configure(text='''Default source path for images for manual addition of images''')
        self.Message1.configure(width=235)

        self.Entry1 = tk.Entry(self.TNotebook1_t1)
        self.Entry1.place(x=250, y=50, height=31, width=246)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="-family {Ubuntu} -size 10 -weight bold")
        self.Entry1.configure(selectbackground="#c4c4c4")

        self.btnFilePath = tk.Button(self.TNotebook1_t1)
        self.btnFilePath.place(x=500, y=50,  height=29, width=40)
        self.btnFilePath.configure(activebackground="#f9f9f9")
        self.btnFilePath.configure(command=formConfig_support.on_btnFilePath)
        self.btnFilePath.configure(text='''...''')

        self.Frame2 = tk.Frame(top)
        self.Frame2.place(x=2, y=2, height=45, width=755)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")

        self.btnExit = tk.Button(self.Frame2)
        self.btnExit.place(x=716, y=2,  height=35, width=35)
        self.btnExit.configure(activebackground="#f9f9f9")
        self.btnExit.configure(command=formConfig_support.on_btnExit)
        self.btnExit.configure(text='''Exit''')

if __name__ == '__main__':
    vp_start_gui()





