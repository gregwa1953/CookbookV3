#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5a
#  in conjunction with Tcl version 8.6
#    Jan 25, 2020 03:59:35 AM CST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import formDbMaint_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    formDbMaint_support.set_Tk_var()
    top = formDbMaint (root)
    formDbMaint_support.init(root, top)
    root.mainloop()

w = None
def create_formDbMaint(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    formDbMaint_support.set_Tk_var()
    top = formDbMaint (w)
    formDbMaint_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_formDbMaint():
    global w
    w.destroy()
    w = None

class formDbMaint:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font12 = "-family {DejaVu Sans} -size 11 -weight bold"
        font13 = "-family {DejaVu Sans} -size 11 -weight bold -slant "  \
            "italic"
        font14 = "-family {DejaVu Sans} -size 14 -weight bold"

        top.geometry("677x689+585+201")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#919191")

        self.btnMigrate = tk.Button(top)
        self.btnMigrate.place(relx=0.118, rely=0.232, height=39, width=309)
        self.btnMigrate.configure(font=font12)
        self.btnMigrate.configure(text='''Migrate Old Database to New''')

        self.btnExit = tk.Button(top)
        self.btnExit.place(relx=0.783, rely=0.044, height=39, width=109)
        self.btnExit.configure(command=formDbMaint_support.on_btnExit)
        self.btnExit.configure(font=font13)
        self.btnExit.configure(text='''Exit''')

        self.btnDupes = tk.Button(top)
        self.btnDupes.place(relx=0.118, rely=0.319, height=39, width=309)
        self.btnDupes.configure(activebackground="#f9f9f9")
        self.btnDupes.configure(command=formDbMaint_support.on_btnDupes)
        self.btnDupes.configure(font="-family {DejaVu Sans} -size 11 -weight bold")
        self.btnDupes.configure(text='''Check for Duplicates''')

        self.btnOrphans = tk.Button(top)
        self.btnOrphans.place(relx=0.118, rely=0.406, height=39, width=309)
        self.btnOrphans.configure(activebackground="#f9f9f9")
        self.btnOrphans.configure(command=formDbMaint_support.on_btnOrphans)
        self.btnOrphans.configure(font="-family {DejaVu Sans} -size 11 -weight bold")
        self.btnOrphans.configure(text='''Check for Orphans''')

        self.lblRecipeCount = tk.Label(top)
        self.lblRecipeCount.place(relx=0.089, rely=0.058, height=79, width=386)
        self.lblRecipeCount.configure(background="#919191")
        self.lblRecipeCount.configure(borderwidth="2")
        self.lblRecipeCount.configure(font=font14)
        self.lblRecipeCount.configure(relief="ridge")
        self.lblRecipeCount.configure(text='''# of Recipes: 9999''')
        self.lblRecipeCount.configure(textvariable=formDbMaint_support.RecipeCount)

if __name__ == '__main__':
    vp_start_gui()





