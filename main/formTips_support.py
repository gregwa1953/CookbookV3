#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Mar 31, 2020 11:42:16 AM CDT  platform: Linux

import sys
from PIL import Image, ImageTk
import os
import platform
import requests
import shutil
import shared
import sqlite3
from dbutils import quote
# from ScrolledCheckedListBox import ScrolledCheckedListBox
import cbv3Main
import cbv3Main_support

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global lblTime
    lblTime = tk.StringVar()
    lblTime.set('Label')

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top
    # ======================================================
    # My init code starts...
    # ======================================================
    global version
    version = '0.1.0'
    pv = platform.python_version()
    print(f"Running under Python {pv}")
    # Set the path for the icon files
    global path1
    path1 = os.getcwd()
    fix_path()
    print(path1)
    print(f"Version: {version}")
    progname = "Greg's Cookbook Tips and Tricks" + version
    root.title(progname)
    start_up()

def start_up():
    global connection, cursor, path1

    connection = sqlite3.Connection(path1 + "/database/cookbook-original.db")
    cursor = connection.cursor()
    # set up for cursors
    # global busyCursor, preBusyCursors, busyWidgets
    # busyCursor = 'watch'
    # preBusyCursors = None
    # busyWidgets = (root, )
    global imgpath
    imgpath = path1 + "/images/"
    set_icon()
    load_screen()

def load_screen():
    pass

def on_btnExit():
    # print('formTips_support.on_btnExit')
    # sys.stdout.flush()
    isok = check_attr(shared, 'remote')
    if isok:
        cbv3Main_support.show_me()
        hide_me()
    else:
        destroy_window()

def fix_path():
    global path1
    if "main" in path1:
        pass
    else:
        path1 = path1 + "/main"

def centre_screen(wid, hei):
    ws = root.winfo_screenwidth()
    hs = root.winfo_screenheight()
    x = (ws/2) - (wid/2)
    y = (hs/2) - (hei/2)
    root.geometry('%dx%d+%d+%d' % (wid, hei, x, y))

# =================================================================
# Window stuff
# =================================================================

def show_me():
    root.deiconify()
    # root.attributes("-topmost", True)

def hide_me():
    cbv3Main_support.show_me()
    root.withdraw()

def set_icon():
    # ======================================================
    # Sets the application icon...
    # ======================================================
    global imgpath, formicon
    # 'icons8-light-32.png')
    formicon = ImageTk.PhotoImage(file=imgpath + '/32/icons8-light-32.png')
    root.tk.call('wm', 'iconphoto', root._w, formicon)

def check_attr(module, variable):
    attr = getattr(module, variable, False)
    if attr is False:
        return False
    else:
        return True

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import formTips
    formTips.vp_start_gui()




